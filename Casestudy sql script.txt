CREATE TABLE users (
    firstname VARCHAR(50),
    lastname VARCHAR(50),
    dateOfBirth DATE,
    gender VARCHAR(10),
    contact_number VARCHAR(15),
    address VARCHAR(255),
    city VARCHAR(50),
    state VARCHAR(50),
    aadhar_num VARCHAR(12),
    pan_num VARCHAR(10),
    status VARCHAR(20) DEFAULT 'NotApproved',
    username VARCHAR(50) NOT NULL,
    emailid VARCHAR(100) NOT NULL,
    income DOUBLE,
    PRIMARY KEY (username, emailid),
    UNIQUE (aadhar_num),
    UNIQUE (pan_num)
);

CREATE TABLE accounts (
    account_number VARCHAR(20) NOT NULL,
    account_type VARCHAR(20),
    balance DOUBLE,
    branch_name VARCHAR(100),
    ifsc_code VARCHAR(11),
    date_created DATE,
    status VARCHAR(20) DEFAULT 'NotApproved',
    username VARCHAR(50),
    emailid VARCHAR(100),
    PRIMARY KEY (account_number),
    FOREIGN KEY (username, emailid) REFERENCES users(username, emailid) ON DELETE CASCADE
);

CREATE TABLE approval_requests (
    request_id INT AUTO_INCREMENT PRIMARY KEY,
    to_whom VARCHAR(255) NOT NULL,
    requirement VARCHAR(255) NOT NULL,
    action_needed_on VARCHAR(255) NOT NULL,
    status VARCHAR(255) NOT NULL,
    created_at DATE,
    remarks VARCHAR(255)
);

CREATE TABLE beneficiary (
    username VARCHAR(255) NOT NULL,
    emailid VARCHAR(255),
    beneficiary_name VARCHAR(255),
    beneficiary_accnum VARCHAR(255),
    beneficiary_bank_name VARCHAR(255),
    beneficiary_branch_name VARCHAR(255),
    beneficiary_ifsc_code VARCHAR(255),
    nickname VARCHAR(255),
    PRIMARY KEY (username),
    FOREIGN KEY (username) REFERENCES users(username)
);

CREATE TABLE new_loan (
    loan_id INT AUTO_INCREMENT PRIMARY KEY,
    loan_name VARCHAR(255) NOT NULL,
    loan_amount DECIMAL(15, 2) NOT NULL,
    status VARCHAR(50) NOT NULL,
    sanction_amount DECIMAL(15, 2) NOT NULL,
    period INT NOT NULL,
    installments_per_month INT NOT NULL,
    total_amount DECIMAL(15, 2) NOT NULL,
    loan_approved_date DATE,
    account_number VARCHAR(255) NOT NULL,
    FOREIGN KEY (account_number) REFERENCES accounts(account_number)
);

CREATE TABLE installments (
    installments_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    loan_id INT NOT NULL,
    installment_amount DECIMAL(10, 2),
    installment_status VARCHAR(255) DEFAULT 'pending',
    installment_date DATE,
    payment_date DATE,
    payment_type VARCHAR(255),
    payment_amount DECIMAL(10, 2),
    remarks VARCHAR(255),
    FOREIGN KEY (loan_id) REFERENCES new_loan(loan_id)
);


CREATE TABLE login (
    username VARCHAR(50) NOT NULL,
    emailid VARCHAR(100) NOT NULL,
    password VARCHAR(255),
    role VARCHAR(50),
    status VARCHAR(10),
    PRIMARY KEY (username, emailid)
);

CREATE TABLE new_loanlist (
    loan_type_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    loan_name VARCHAR(255) NOT NULL,
    amount DOUBLE NOT NULL,
    interest_rate DOUBLE NOT NULL,
    period INT NOT NULL,
    eligible_income DOUBLE,
    min_tenure_months INT
);

CREATE TABLE transactions (
    transaction_id INT AUTO_INCREMENT PRIMARY KEY,
    account_number VARCHAR(20),
    transaction_type VARCHAR(50),
    amount DOUBLE,
    transaction_date DATE,
    description VARCHAR(255),
    FOREIGN KEY (account_number) REFERENCES accounts(account_number) ON DELETE CASCADE
);
